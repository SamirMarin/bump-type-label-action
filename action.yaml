name: 'bump-type-label-action'
description: 'Outputs a bump type based on a label'
inputs:
  default_bump:
    description: 'The default bump if no label is found'
    required: false
    default: 'patch'
outputs:
  random-number:
    description: "Bump Type"
    value: ${{ steps.bump-type.outputs.value }}
runs:
  using: "composite"
  steps:
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    - id: bump-type
      run: |
        BUMP_VERSION=${{ inputs.default_bump }}
        if [[ ${{ github.event_name }} != 'pull_request' ]]; then
          REPOSITORIES=$(curl \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}/commits/${GITHUB_SHA}/pulls)
          LENGTH=$(echo "$REPOSITORIES" | jq length)
          if [[  "$LENGTH" != "1" ]]; then
            printf "\t|- Failed to find single PR with latest commit sha\n"
            exit 1
          fi
          LABELS=$(echo "$REPOSITORIES" | jq '.[0].labels | .[].name')
          if echo "${LABELS}" | grep "bump:major" ; then
            BUMP_VERSION="major"
          elif echo "${LABELS}" | grep "bump:minor" ; then
            BUMP_VERSION="minor"
          elif echo "${LABELS}" | grep "bump:patch" ; then
            BUMP_VERSION="patch"
          elif echo "${LABELS}" | grep "bump:ignore" ; then
            BUMP_VERSION="ignore"
          fi
        else
          if ${{ contains(github.event.pull_request.labels.*.name, 'bump:major') }}; then
            BUMP_VERSION="major"
          elif ${{ contains(github.event.pull_request.labels.*.name, 'bump:minor') }}; then
            BUMP_VERSION="minor"
          elif ${{ contains(github.event.pull_request.labels.*.name, 'bump:patch') }}; then
            BUMP_VERSION="patch"
          elif ${{ contains(github.event.pull_request.labels.*.name, 'bump:ignore') }}; then
            BUMP_VERSION="ignore"
          fi
        fi
        echo "The bump value is: $BUMP_VERSION"
        echo "value=${BUMP_VERSION}" >> $GITHUB_OUTPUT
      shell: bash
